{"version":3,"file":"static/js/518.96a1e208.chunk.js","mappings":"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","sources":["components/backButton/backButton.tsx","components/gameCardPreview/gameCardPreview.tsx","components/favoritesList/favoritesList.tsx","pages/favorites.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport './backButton.css'\r\n\r\nexport const BackButton = () => {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <div className='backButton__wrapper'>\r\n            <button\r\n                className='button backButton'\r\n                onClick={() => navigate(-1)}\r\n            >\r\n                GO BACK\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { useNavigate } from 'react-router-dom'\r\nimport React, { useState } from 'react'\r\n\r\ninterface IGameCardPreview {\r\n    id: number\r\n    image: string\r\n    name: string\r\n    rating?: number\r\n    released: string\r\n    favoriteOnClickHandler?: (\r\n        e: React.MouseEvent<HTMLElement>,\r\n        id: number\r\n    ) => void\r\n    isFauvorite?: boolean\r\n    genres?: string[]\r\n    platforms?: string[]\r\n}\r\n\r\nexport const GameCardPreview = ({\r\n    id,\r\n    image,\r\n    name,\r\n    rating,\r\n    released,\r\n    favoriteOnClickHandler,\r\n    isFauvorite = false,\r\n    genres,\r\n    platforms,\r\n}: IGameCardPreview) => {\r\n    const [isActive, setIsActive] = useState<boolean>()\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <div className='allGamesList__wrapper'>\r\n            <div\r\n                onMouseEnter={() => setIsActive(true)}\r\n                onMouseLeave={() => setIsActive(false)}\r\n                key={id}\r\n                className='allGamesList__item'\r\n                onClick={() => navigate(`/Game/${id}`)}\r\n            >\r\n                {!isFauvorite && genres && platforms && (\r\n                    <div\r\n                        className={\r\n                            isActive\r\n                                ? 'allGamesList__fullInfo allGamesList__fullInfo_Active'\r\n                                : 'allGamesList__fullInfo'\r\n                        }\r\n                    >\r\n                        <div className='allGamesList__fullInfo-description'>\r\n                            <h2 className='allGamesList__name'>{name}</h2>\r\n                            <span className='allGamesList__date_fullInfo'>\r\n                                Released:\r\n                                <br /> {released}\r\n                            </span>\r\n                            <div className='allGamesList__rating_fullInfo'>\r\n                                Rating: {rating} / 5\r\n                            </div>\r\n                            <div className='allgamesList__genres'>\r\n                                {genres.map((e, ind) => (\r\n                                    <div\r\n                                        className='allgamesList__genres-item'\r\n                                        key={ind}\r\n                                    >\r\n                                        {e}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className='allgamesList__platforms'>\r\n                                {platforms.map((e, ind) => {\r\n                                    if (e) {\r\n                                        return (\r\n                                            <div\r\n                                                className='allgamesList__platforms-item'\r\n                                                key={ind}\r\n                                            >\r\n                                                {e}\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className='allGamesList__container'>\r\n                    <img\r\n                        className='allGamesList__img'\r\n                        src={image}\r\n                        alt={name}\r\n                    />\r\n                    <div className='allGamesList__description'>\r\n                        <h2 className='allGamesList__name'>{name}</h2>\r\n                        {isFauvorite && favoriteOnClickHandler ? (\r\n                            <button\r\n                                onClick={e => favoriteOnClickHandler(e, id)}\r\n                                className='favorites__delete button'\r\n                            >\r\n                                Remove from favorites\r\n                            </button>\r\n                        ) : (\r\n                            <div className='allGamesList__rating'>\r\n                                Rating: {rating} / 5\r\n                            </div>\r\n                        )}\r\n                        {isFauvorite ? (\r\n                            <span className='allGamesList__date'>\r\n                                Added:\r\n                                <br /> {released}\r\n                            </span>\r\n                        ) : (\r\n                            <span className='allGamesList__date'>\r\n                                Released:\r\n                                <br /> {released}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {\r\n    useGetUserFavoritesQuery,\r\n    useLazyDeleteUserFavoritesQuery,\r\n    useLazyGetUserFavoritesQuery,\r\n} from '../../api/firestoreApi'\r\nimport { useAuthorization } from '../../store/hooks'\r\nimport { Loader } from '../loader/loader'\r\nimport { GameCardPreview } from '../gameCardPreview/gameCardPreview'\r\nimport { BackButton } from '../backButton/backButton'\r\nimport React from 'react'\r\nimport './favoritesList.css'\r\n\r\nfunction FavoritesList() {\r\n    const { email } = useAuthorization()\r\n    const [triggerDelete] = useLazyDeleteUserFavoritesQuery()\r\n    const [triggerGet] = useLazyGetUserFavoritesQuery()\r\n    const { data, isSuccess, isLoading, isFetching, isError } =\r\n        useGetUserFavoritesQuery({ email: email })\r\n\r\n    const onClickHandler = async (\r\n        e: React.MouseEvent<HTMLElement>,\r\n        id: number\r\n    ) => {\r\n        e.stopPropagation()\r\n        triggerDelete({ email: email, id: String(id) })\r\n        triggerGet({ email: email })\r\n    }\r\n\r\n    let content\r\n    if (isLoading || isFetching) {\r\n        content = <Loader />\r\n    } else if (isSuccess) {\r\n        const dataArr = Object.values(data)\r\n        if (isSuccess && !dataArr.length) {\r\n            return <div className='favorites'>Nothing was found</div>\r\n        }\r\n        content = dataArr.map(game => (\r\n            <GameCardPreview\r\n                key={game.id}\r\n                id={game.id}\r\n                image={game.background_image}\r\n                name={game.name}\r\n                released={game.date}\r\n                isFauvorite={true}\r\n                favoriteOnClickHandler={onClickHandler}\r\n            />\r\n        ))\r\n    } else if (isError) {\r\n        content = <div>Something went wrong</div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BackButton />\r\n            <div className='favorites'>{content}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { FavoritesList }\r\n","import { FavoritesList } from '../components/favoritesList/favoritesList'\r\nimport React from 'react'\r\n\r\nfunction Favorites() {\r\n    return <FavoritesList />\r\n}\r\n\r\nexport { Favorites as default }\r\n"],"names":["BackButton","navigate","useNavigate","_jsx","className","children","onClick","GameCardPreview","_ref","id","image","name","rating","released","favoriteOnClickHandler","_ref$isFauvorite","isFauvorite","genres","platforms","_useState","useState","_useState2","_slicedToArray","isActive","setIsActive","_jsxs","onMouseEnter","onMouseLeave","concat","map","e","ind","src","alt","FavoritesList","content","email","useAuthorization","_useLazyDeleteUserFav","useLazyDeleteUserFavoritesQuery","triggerDelete","_useLazyGetUserFavori","useLazyGetUserFavoritesQuery","triggerGet","_useGetUserFavoritesQ","useGetUserFavoritesQuery","data","isSuccess","isLoading","isFetching","isError","onClickHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stopPropagation","String","stop","_x","_x2","apply","arguments","Loader","dataArr","Object","values","length","game","background_image","date","_Fragment","Favorites"],"sourceRoot":""}