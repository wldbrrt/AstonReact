{"version":3,"file":"static/js/10.4c53235c.chunk.js","mappings":"4IAAO,IAAMA,EAAiB,WAC1B,IAAMC,EAAc,IAAIC,KAcxB,OAZID,EAAYE,UACZ,KACCF,EAAYG,WAAa,GAC1B,IACAH,EAAYI,cACZ,IACAJ,EAAYK,WACZ,IACAL,EAAYM,aACZ,IACAN,EAAYO,YAGpB,C,uJCAA,SAASC,EAAQC,GAA8B,IAQvCC,EARYC,EAAMF,EAANE,OAChBC,GACIC,EAAAA,EAAAA,IAAsB,CAAEF,OAAQA,IAD5BG,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAWC,EAAUJ,EAAVI,WAAYC,EAASL,EAATK,UAAWC,EAAON,EAAPM,QAASC,EAAKP,EAALO,MAGzDC,GAAkBC,EAAAA,EAAAA,MAAXC,GAA4CC,EAAAA,EAAAA,GAAAH,EAAA,GAArC,GACdI,GAAqBC,EAAAA,EAAAA,MAAdC,GAA4CH,EAAAA,EAAAA,GAAAC,EAAA,GAAlC,GACTG,GAAUC,EAAAA,EAAAA,MAAVD,MA2CR,OAvCIZ,GAAaC,EACbN,GAAUmB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACVb,EACPP,GACIqB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACjBJ,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYC,SAAEnB,EAAKoB,QACjCH,EAAAA,EAAAA,MAAA,QAAMC,UAAU,eAAcC,SAAA,CAAC,WAASnB,EAAKqB,OAAO,SACpDJ,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAYC,SAAA,CAAC,iBACVnB,EAAKsB,aAExBP,EAAAA,EAAAA,KAAA,OACIG,UAAU,YACVK,IAAKvB,EAAKwB,iBACVC,IAAKzB,EAAKoB,QAEdL,EAAAA,EAAAA,KAAA,UACIG,UAAU,YACVQ,QAAS,WACLlB,EAAQ,CACJmB,GAAIC,OAAO/B,GACXgB,MAAOA,EACPO,KAAMpB,EAAKoB,KACXI,iBAAkBxB,EAAKwB,iBACvBK,MAAM5C,EAAAA,EAAAA,OAEV2B,EAAW,CAAEC,MAAOA,GACxB,EAAEM,SACL,qBAGDJ,EAAAA,EAAAA,KAAA,QAAMG,UAAU,oBAAmBC,SAC9BnB,EAAK8B,qBAIX1B,IACPR,GAAUmB,EAAAA,EAAAA,KAAA,OAAAI,SAAMd,EAAM0B,eAGnBhB,EAAAA,EAAAA,KAAA,OAAAI,SAAMvB,GACjB,C,cC5DA,SAASoC,IACL,IAAQL,GAAOM,EAAAA,EAAAA,MAAPN,GACF9B,EAASqC,OAAOP,GAGtB,OAFmBb,EAAAA,EAAAA,MAAXqB,QAEQpB,EAAAA,EAAAA,KAACrB,EAAQ,CAACG,OAAQA,KAAakB,EAAAA,EAAAA,KAACqB,EAAAA,GAAQ,CAACC,GAAG,WAChE,C","sources":["features/getCurrentDate.ts","components/gameCard/gameCard.tsx","pages/game.tsx"],"sourcesContent":["export const getCurrentDate = () => {\r\n    const currentdate = new Date()\r\n    const result =\r\n        currentdate.getDate() +\r\n        '/' +\r\n        (currentdate.getMonth() + 1) +\r\n        '/' +\r\n        currentdate.getFullYear() +\r\n        ' ' +\r\n        currentdate.getHours() +\r\n        ':' +\r\n        currentdate.getMinutes() +\r\n        ':' +\r\n        currentdate.getSeconds()\r\n\r\n    return result\r\n}\r\n","import { useGetSingleGameQuery } from '../../store/slices/gamesAPI'\r\nimport { getCurrentDate } from '../../features/getCurrentDate'\r\nimport { useAuthorization } from '../../store/hooks'\r\nimport {\r\n    useLazyGetUserFavoritesQuery,\r\n    useLazyUpdateUserFavoritesQuery,\r\n} from '../../store/slices/firestoreApi'\r\nimport { Loader } from '../loader/loader'\r\nimport React from 'react'\r\nimport './gameCard.css'\r\nimport PropTypes from 'prop-types'\r\n\r\ninterface IgameCardProps {\r\n    gameId: number\r\n}\r\n\r\nfunction GameCard({ gameId }: IgameCardProps) {\r\n    const { data, isLoading, isFetching, isSuccess, isError, error } =\r\n        useGetSingleGameQuery({ gameId: gameId })\r\n\r\n    const [trigger] = useLazyUpdateUserFavoritesQuery()\r\n    const [triggerGet] = useLazyGetUserFavoritesQuery()\r\n    const { email } = useAuthorization()\r\n\r\n    let content\r\n\r\n    if (isLoading || isFetching) {\r\n        content = <Loader />\r\n    } else if (isSuccess) {\r\n        content = (\r\n            <div className='game'>\r\n                <h2 className='game__name'>{data.name}</h2>\r\n                <span className='game__rating'>Rating: {data.rating}/5</span>\r\n                <span className='game__date'>\r\n                    Released date:{data.released}\r\n                </span>\r\n                <img\r\n                    className='game__img'\r\n                    src={data.background_image}\r\n                    alt={data.name}\r\n                />\r\n                <button\r\n                    className='game__add'\r\n                    onClick={() => {\r\n                        trigger({\r\n                            id: String(gameId),\r\n                            email: email,\r\n                            name: data.name,\r\n                            background_image: data.background_image,\r\n                            date: getCurrentDate(),\r\n                        })\r\n                        triggerGet({ email: email })\r\n                    }}\r\n                >\r\n                    Add to Favorite\r\n                </button>\r\n                <span className='game__description'>\r\n                    {data.description_raw}\r\n                </span>\r\n            </div>\r\n        )\r\n    } else if (isError) {\r\n        content = <div>{error.toString()}</div>\r\n    }\r\n\r\n    return <div>{content}</div>\r\n}\r\n\r\nGameCard.propTypes = {\r\n    gameId: PropTypes.number,\r\n}\r\n\r\nexport { GameCard }\r\n","import { GameCard } from '../components/gameCard/gameCard'\r\nimport { useAuthorization } from '../store/hooks'\r\nimport { useParams, Navigate } from 'react-router-dom'\r\nimport React from 'react'\r\nimport './game.css'\r\n\r\nfunction Game() {\r\n    const { id } = useParams()\r\n    const gameId = Number(id)\r\n    const { isAuth } = useAuthorization()\r\n\r\n    return isAuth ? <GameCard gameId={gameId} /> : <Navigate to='/SignUp' />\r\n}\r\n\r\nexport { Game as default }\r\n"],"names":["getCurrentDate","currentdate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","GameCard","_ref","content","gameId","_useGetSingleGameQuer","useGetSingleGameQuery","data","isLoading","isFetching","isSuccess","isError","error","_useLazyUpdateUserFav","useLazyUpdateUserFavoritesQuery","trigger","_slicedToArray","_useLazyGetUserFavori","useLazyGetUserFavoritesQuery","triggerGet","email","useAuthorization","_jsx","Loader","_jsxs","className","children","name","rating","released","src","background_image","alt","onClick","id","String","date","description_raw","toString","Game","useParams","Number","isAuth","Navigate","to"],"sourceRoot":""}