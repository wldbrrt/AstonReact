{"version":3,"file":"static/js/880.86d9a20c.chunk.js","mappings":"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","sources":["features/formatDate.ts","features/getDateFromIsoString.ts","components/historyList/historyList.tsx","pages/history.tsx"],"sourcesContent":["export const formatDate = (date: string) => {\r\n    const formatDate = new Date(date)\r\n    const result = `${formatDate.getFullYear()}-${formatDate.getMonth()}-${formatDate.getDay()}`\r\n    return Date.parse(result)\r\n}\r\n","export const getDateFromIsoString = (isoDate: string, isTimeShown = false) => {\r\n    const date = new Date(isoDate)\r\n    const resultDate =\r\n        date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear()\r\n\r\n    const resultDateWithTime =\r\n        resultDate +\r\n        ' ' +\r\n        date.getHours() +\r\n        ':' +\r\n        date.getMinutes() +\r\n        ':' +\r\n        date.getSeconds()\r\n\r\n    return isTimeShown ? resultDateWithTime : resultDate\r\n}\r\n","import {\r\n    useGetUserHistoryQuery,\r\n    useLazyDeleteUserHistoryQuery,\r\n    useLazyGetUserHistoryQuery,\r\n} from '../../api/firestoreApi'\r\nimport { useAuthorization } from '../../store/hooks'\r\nimport { Loader } from '../loader/loader'\r\nimport { formatDate } from '../../features/formatDate'\r\nimport { IHistory } from '../../types/firestoreApiTypes'\r\nimport { getDateFromIsoString } from '../../features/getDateFromIsoString'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport React from 'react'\r\nimport './historyList.css'\r\n\r\ninterface IDateObj {\r\n    [key: string]: IHistory[]\r\n}\r\n\r\nfunction HistoryList() {\r\n    const { email } = useAuthorization()\r\n    const { data, isSuccess, isLoading, isFetching, error, isError } =\r\n        useGetUserHistoryQuery({\r\n            email: email,\r\n        })\r\n    const [triggerUpdateHistory] = useLazyGetUserHistoryQuery()\r\n    const navigate = useNavigate()\r\n    const [triggerDeleteHistory] = useLazyDeleteUserHistoryQuery()\r\n\r\n    const curDate = formatDate(new Date().toISOString())\r\n\r\n    let content\r\n    if (isFetching || isLoading) {\r\n        content = <Loader />\r\n    } else if (isSuccess && !data.history.length) {\r\n        content = 'Nothing was found'\r\n    } else if (isSuccess) {\r\n        const dateObj: IDateObj = {}\r\n        data.history.forEach(e => {\r\n            const dateKey = formatDate(e.date)\r\n            if (dateObj[dateKey]) {\r\n                dateObj[dateKey].push(e)\r\n            } else {\r\n                dateObj[dateKey] = [e]\r\n            }\r\n        })\r\n        content = Object.values(dateObj)\r\n            .reverse()\r\n            .map((e, index) => (\r\n                <div key={e[0].date + index}>\r\n                    <h2>\r\n                        {formatDate(e[0].date) === curDate\r\n                            ? 'Today'\r\n                            : getDateFromIsoString(e[0].date)}\r\n                    </h2>\r\n                    <div className='historyList__wrapper'>\r\n                        {e.reverse().map((e, ind) => (\r\n                            <div\r\n                                key={ind}\r\n                                className='histotyList__item'\r\n                                onClick={() => {\r\n                                    navigate({\r\n                                        pathname: '/',\r\n                                        search: `?search=${e.searchReq}&page=1`,\r\n                                    })\r\n                                }}\r\n                            >\r\n                                <div className='histotyList__name'>\r\n                                    {e.searchReq}\r\n                                </div>\r\n                                <div className='histotyList__date'>\r\n                                    {getDateFromIsoString(e.date, true)}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ))\r\n    } else if (isError) {\r\n        content = <div>{String(error)}</div>\r\n    }\r\n\r\n    return (\r\n        <div className='histotyList'>\r\n            <button\r\n                onClick={async () => {\r\n                    await triggerDeleteHistory({ email: email })\r\n                    await triggerUpdateHistory({ email: email })\r\n                }}\r\n                className='historyList__button button'\r\n            >\r\n                Clear history\r\n            </button>\r\n            <div className='historyList__container'>{content}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { HistoryList }\r\n","import { HistoryList } from '../components/historyList/historyList'\r\nimport React from 'react'\r\n\r\nfunction History() {\r\n    return <HistoryList />\r\n}\r\n\r\nexport { History as default }\r\n"],"names":["formatDate","date","Date","result","concat","getFullYear","getMonth","getDay","parse","getDateFromIsoString","isoDate","isTimeShown","arguments","length","undefined","resultDate","getDate","resultDateWithTime","getHours","getMinutes","getSeconds","HistoryList","content","email","useAuthorization","_useGetUserHistoryQue","useGetUserHistoryQuery","data","isSuccess","isLoading","isFetching","error","isError","_useLazyGetUserHistor","useLazyGetUserHistoryQuery","triggerUpdateHistory","_slicedToArray","navigate","useNavigate","_useLazyDeleteUserHis","useLazyDeleteUserHistoryQuery","triggerDeleteHistory","curDate","toISOString","_jsx","Loader","history","dateObj","forEach","e","dateKey","push","Object","values","reverse","map","index","_jsxs","children","className","ind","onClick","pathname","search","searchReq","String","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","History"],"sourceRoot":""}