{"version":3,"file":"static/js/448.3b432e32.chunk.js","mappings":"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","sources":["features/getCurrentDate.ts","components/search/searchInput.tsx","components/search/gameList.tsx","components/search/search.tsx","components/allGamesList/allGamesList.tsx","components/allGamesList/pageControlls.tsx","pages/home.tsx"],"sourcesContent":["export const getCurrentDate = () => {\r\n    const currentdate = new Date()\r\n    const result =\r\n        currentdate.getDate() +\r\n        '/' +\r\n        (currentdate.getMonth() + 1) +\r\n        '/' +\r\n        currentdate.getFullYear() +\r\n        ' ' +\r\n        currentdate.getHours() +\r\n        ':' +\r\n        currentdate.getMinutes() +\r\n        ':' +\r\n        currentdate.getSeconds()\r\n\r\n    return result\r\n}\r\n","import React from 'react'\r\nimport './searchInput.css'\r\n\r\ninterface SearchInputProps {\r\n    onChangeHandler: (gameName: string) => void\r\n    onFocusHandler: (isFocused: boolean) => void\r\n    gameName: string\r\n    onKeyDownEvent: () => void\r\n}\r\n\r\nfunction SearchInput({\r\n    onChangeHandler,\r\n    onFocusHandler,\r\n    gameName,\r\n    onKeyDownEvent,\r\n}: SearchInputProps) {\r\n    return (\r\n        <input\r\n            className='search__input'\r\n            type='text'\r\n            placeholder='Enter game name'\r\n            name='search'\r\n            value={gameName}\r\n            onChange={e => onChangeHandler(e.target.value)}\r\n            onFocus={() => onFocusHandler(true)}\r\n            onBlur={() => onFocusHandler(false)}\r\n            onKeyDown={e => {\r\n                if (e.key === 'Enter') {\r\n                    onKeyDownEvent()\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport { SearchInput }\r\n","import { useGetGamesQuery } from '../../store/slices/gamesAPI'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport React from 'react'\r\nimport './gameList.css'\r\nimport PropTypes from 'prop-types'\r\n\r\ninterface GameListProps {\r\n    pages: number\r\n    size: number\r\n    name: string\r\n    isInputFocused: boolean\r\n}\r\n\r\nfunction GameList({ pages, size, name, isInputFocused }: GameListProps) {\r\n    const navigate = useNavigate()\r\n    const { data, isLoading, isFetching, isSuccess, isError, error } =\r\n        useGetGamesQuery({ pageNumber: pages, pageSize: size, gameName: name })\r\n\r\n    let content\r\n    if (isLoading || isFetching) {\r\n        content = 'LOADING'\r\n    } else if (isSuccess && !data?.count) {\r\n        content = 'Nothing has found'\r\n    } else if (isSuccess) {\r\n        content = data.results.map(game => (\r\n            <div\r\n                key={game.id}\r\n                className='search__item'\r\n                onClick={() => navigate(`/Game/${game.id}`)}\r\n            >\r\n                <img\r\n                    className='search__img'\r\n                    src={game.background_image}\r\n                    alt={game.name}\r\n                />\r\n                <h2>{game.name}</h2>\r\n                <span>{game.released}</span>\r\n            </div>\r\n        ))\r\n    } else if (isError) {\r\n        content = <div>{error.toString()}</div>\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                name && isInputFocused\r\n                    ? 'search__list'\r\n                    : 'search__list search__list_hidden'\r\n            }\r\n        >\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nGameList.propTypes = {\r\n    pages: PropTypes.number,\r\n    size: PropTypes.number,\r\n    name: PropTypes.string,\r\n    isInputFocused: PropTypes.bool,\r\n}\r\n\r\nexport { GameList }\r\n","import { SearchInput } from './searchInput'\r\nimport { GameList } from './gameList'\r\nimport { getCurrentDate } from '../../features/getCurrentDate'\r\nimport { useAuthorization, useDebounce } from '../../store/hooks'\r\nimport {\r\n    useLazyGetUserHistoryQuery,\r\n    useLazyUpdateUserHistoryQuery,\r\n} from '../../store/slices/firestoreApi'\r\nimport React, { useState } from 'react'\r\nimport './search.css'\r\n\r\ninterface SearchProps {\r\n    onClickHandler: (gameName: string) => void\r\n    onClickPageReset: (pageNumber: number) => void\r\n}\r\n\r\nfunction Search({ onClickHandler, onClickPageReset }: SearchProps) {\r\n    const { email } = useAuthorization()\r\n    const [triggerUpdateData] = useLazyUpdateUserHistoryQuery()\r\n    const [triggerGetData] = useLazyGetUserHistoryQuery()\r\n    const [gameName, setGameName] = useState('')\r\n    const [isFocused, setIsFocused] = useState(false)\r\n    const debouncedValue = useDebounce(gameName, 800)\r\n\r\n    const searchEventHandler = async () => {\r\n        onClickHandler(gameName)\r\n        onClickPageReset(1)\r\n        setGameName('')\r\n        if (gameName) {\r\n            await triggerUpdateData({\r\n                email: email,\r\n                name: gameName,\r\n                date: getCurrentDate(),\r\n            })\r\n            await triggerGetData({\r\n                email: email,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='search'>\r\n            <SearchInput\r\n                onChangeHandler={setGameName}\r\n                onFocusHandler={setIsFocused}\r\n                gameName={gameName}\r\n                onKeyDownEvent={searchEventHandler}\r\n            />\r\n            <button\r\n                className='search__button'\r\n                onClick={searchEventHandler}\r\n            >\r\n                Search\r\n            </button>\r\n            <GameList\r\n                pages={1}\r\n                size={5}\r\n                name={debouncedValue}\r\n                isInputFocused={isFocused}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport { Search }\r\n","import { useGetGamesQuery } from '../../store/slices/gamesAPI'\r\nimport { Loader } from '../loader/loader'\r\nimport { useNavigate, useSearchParams } from 'react-router-dom'\r\nimport React, { useEffect } from 'react'\r\nimport './allGamesList.css'\r\n\r\ninterface GameListProps {\r\n    size: number\r\n    isLastPageSetter: (value: boolean) => void\r\n}\r\n\r\nfunction AllGamesList({ size, isLastPageSetter }: GameListProps) {\r\n    const [value] = useSearchParams()\r\n    const navigate = useNavigate()\r\n    const { data, isLoading, isFetching, isSuccess, isError, error } =\r\n        useGetGamesQuery({\r\n            pageNumber: Number(value.get('page')) || 1,\r\n            pageSize: size,\r\n            gameName: value.get('search') || '',\r\n        })\r\n\r\n    useEffect(() => {\r\n        if (data) isLastPageSetter(Boolean(!data.next))\r\n    }, [data])\r\n\r\n    let content\r\n    if (isLoading || isFetching) {\r\n        content = <Loader />\r\n    } else if (isSuccess && !data?.count) {\r\n        content = 'Nothing has found'\r\n    } else if (isSuccess) {\r\n        content = data.results.map(game => (\r\n            <div\r\n                key={game.id}\r\n                className='allGamesList__item'\r\n                onClick={() => navigate(`/Game/${game.id}`)}\r\n            >\r\n                <img\r\n                    className='allGamesList__img'\r\n                    src={game.background_image}\r\n                    alt={game.name}\r\n                />\r\n                <h2 className='allGamesList__name'>{game.name}</h2>\r\n                <div className='allGamesList__rating'>\r\n                    Rating: {game.rating} / 5\r\n                </div>\r\n                <span className='allGamesList__date'>\r\n                    Released: {game.released}\r\n                </span>\r\n            </div>\r\n        ))\r\n    } else if (isError) {\r\n        content = <div>{error.toString()}</div>\r\n    }\r\n\r\n    return <div className='allGamesList'>{content}</div>\r\n}\r\n\r\nexport { AllGamesList }\r\n","import React from 'react'\r\nimport './pageControlls.css'\r\n\r\ninterface PageControllsProps {\r\n    page: number\r\n    onClickHandler: (page: number) => void\r\n    isLastPage: boolean\r\n}\r\n\r\nfunction PageControlls({\r\n    page,\r\n    onClickHandler,\r\n    isLastPage,\r\n}: PageControllsProps) {\r\n    const scrollToTop = () => {\r\n        window.scrollTo({ top: 0 })\r\n    }\r\n\r\n    return (\r\n        <div className='pageControlls'>\r\n            <button\r\n                disabled={page <= 1}\r\n                onClick={() => {\r\n                    onClickHandler(page - 1)\r\n                    scrollToTop()\r\n                }}\r\n                className='pageControlls_button'\r\n            >\r\n                previous\r\n            </button>\r\n            <button\r\n                disabled={page <= 1}\r\n                onClick={() => {\r\n                    onClickHandler(1)\r\n                    scrollToTop()\r\n                }}\r\n                className='pageControlls_button'\r\n            >\r\n                back to 1\r\n            </button>\r\n            <button\r\n                disabled={isLastPage}\r\n                onClick={() => {\r\n                    onClickHandler(page + 1)\r\n                    scrollToTop()\r\n                }}\r\n                className='pageControlls_button'\r\n            >\r\n                next\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { PageControlls }\r\n","import { Search } from '../components/search/search'\r\nimport { AllGamesList } from '../components/allGamesList/allGamesList'\r\nimport { PageControlls } from '../components/allGamesList/pageControlls'\r\nimport { useAuthorization } from '../store/hooks'\r\nimport { Theme } from '../App'\r\nimport { Navigate, useSearchParams } from 'react-router-dom'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport './home.css'\r\n\r\nfunction Home() {\r\n    const { isAuth } = useAuthorization()\r\n    const [value, setValue] = useSearchParams()\r\n    const [gameName, setGameName] = useState(value.get('search') || '')\r\n    const [pageNumber, setPagenumber] = useState(Number(value.get('page')) || 1)\r\n    const [isLastPage, setIsLastPage] = useState(true)\r\n    const theme = useContext(Theme)\r\n    useEffect(() => {\r\n        setValue(params => {\r\n            params.set('search', gameName)\r\n            params.set('page', String(pageNumber))\r\n            return params\r\n        })\r\n    }, [gameName, pageNumber])\r\n\r\n    return isAuth ? (\r\n        <div className={theme === 'light' ? 'home' : 'home _black'}>\r\n            <Search\r\n                onClickHandler={setGameName}\r\n                onClickPageReset={setPagenumber}\r\n            />\r\n            <h1>Search: {gameName}</h1>\r\n            <AllGamesList\r\n                size={21}\r\n                isLastPageSetter={setIsLastPage}\r\n            />\r\n            <PageControlls\r\n                page={pageNumber}\r\n                onClickHandler={setPagenumber}\r\n                isLastPage={isLastPage}\r\n            />\r\n        </div>\r\n    ) : (\r\n        <Navigate to='/SignIn' />\r\n    )\r\n}\r\n\r\nexport { Home as default }\r\n"],"names":["getCurrentDate","currentdate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","SearchInput","_ref","onChangeHandler","onFocusHandler","gameName","onKeyDownEvent","_jsx","className","type","placeholder","name","value","onChange","e","target","onFocus","onBlur","onKeyDown","key","GameList","content","pages","size","isInputFocused","navigate","useNavigate","_useGetGamesQuery","useGetGamesQuery","pageNumber","pageSize","data","isLoading","isFetching","isSuccess","isError","error","count","results","map","game","_jsxs","onClick","concat","id","children","src","background_image","alt","released","toString","Search","onClickHandler","onClickPageReset","email","useAuthorization","_useLazyUpdateUserHis","useLazyUpdateUserHistoryQuery","triggerUpdateData","_slicedToArray","_useLazyGetUserHistor","useLazyGetUserHistoryQuery","triggerGetData","_useState","useState","_useState2","setGameName","_useState3","_useState4","isFocused","setIsFocused","debouncedValue","useDebounce","searchEventHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","date","stop","apply","arguments","AllGamesList","isLastPageSetter","_useSearchParams","useSearchParams","Number","get","useEffect","Boolean","Loader","rating","PageControlls","page","isLastPage","scrollToTop","window","scrollTo","top","disabled","Home","isAuth","_useSearchParams2","setValue","setPagenumber","_useState5","_useState6","setIsLastPage","theme","useContext","Theme","params","set","String","Navigate","to"],"sourceRoot":""}